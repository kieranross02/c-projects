0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Fri Mar 04 22:06:50 2022
0000              5   ;--------------------------------------------------------
                  5   $name adc_spi
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _LCDprint
0000             29            public _WriteData
0000             30            public _GetADC
0000             31            public _Timer2_ISR
0000             32            public _LCD_4BIT
0000             33            public __c51_external_startup
0000             34            public _WriteCommand
0000             35            public _LCD_byte
0000             36            public _LCD_pulse
0000             37            public _waitms
0000             38            public _wait_us
0000             39            public _SPIWrite
0000             40            public _LCDprint_PARM_3
0000             41            public _LCDprint_PARM_2
0000             42            public _c
0000             43   ;--------------------------------------------------------
0000             44   ; Special Function Registers
0000             45   ;--------------------------------------------------------
0000             46   _ACC            DATA 0xe0
0000             47   _B              DATA 0xf0
0000             48   _PSW            DATA 0xd0
0000             49   _SP             DATA 0x81
0000             50   _SPX            DATA 0xef
0000             51   _DPL            DATA 0x82
0000             52   _DPH            DATA 0x83
0000             53   _DPLB           DATA 0xd4
0000             54   _DPHB           DATA 0xd5
0000             55   _PAGE           DATA 0xf6
0000             56   _AX             DATA 0xe1
0000             57   _BX             DATA 0xf7
0000             58   _DSPR           DATA 0xe2
0000             59   _FIRD           DATA 0xe3
0000             60   _MACL           DATA 0xe4
0000             61   _MACH           DATA 0xe5
0000             62   _PCON           DATA 0x87
0000             63   _AUXR           DATA 0x8e
0000             64   _AUXR1          DATA 0xa2
0000             65   _DPCF           DATA 0xa1
0000             66   _CKRL           DATA 0x97
0000             67   _CKCKON0        DATA 0x8f
0000             68   _CKCKON1        DATA 0xaf
0000             69   _CKSEL          DATA 0x85
0000             70   _CLKREG         DATA 0xae
0000             71   _OSCCON         DATA 0x85
0000             72   _IE             DATA 0xa8
0000             73   _IEN0           DATA 0xa8
0000             74   _IEN1           DATA 0xb1
0000             75   _IPH0           DATA 0xb7
0000             76   _IP             DATA 0xb8
0000             77   _IPL0           DATA 0xb8
0000             78   _IPH1           DATA 0xb3
0000             79   _IPL1           DATA 0xb2
0000             80   _P0             DATA 0x80
0000             81   _P1             DATA 0x90
0000             82   _P2             DATA 0xa0
0000             83   _P3             DATA 0xb0
0000             84   _P4             DATA 0xc0
0000             85   _P0M0           DATA 0xe6
0000             86   _P0M1           DATA 0xe7
0000             87   _P1M0           DATA 0xd6
0000             88   _P1M1           DATA 0xd7
0000             89   _P2M0           DATA 0xce
0000             90   _P2M1           DATA 0xcf
0000             91   _P3M0           DATA 0xc6
0000             92   _P3M1           DATA 0xc7
0000             93   _P4M0           DATA 0xbe
0000             94   _P4M1           DATA 0xbf
0000             95   _SCON           DATA 0x98
0000             96   _SBUF           DATA 0x99
0000             97   _SADEN          DATA 0xb9
0000             98   _SADDR          DATA 0xa9
0000             99   _BDRCON         DATA 0x9b
0000            100   _BRL            DATA 0x9a
0000            101   _TCON           DATA 0x88
0000            102   _TMOD           DATA 0x89
0000            103   _TCONB          DATA 0x91
0000            104   _TL0            DATA 0x8a
0000            105   _TH0            DATA 0x8c
0000            106   _TL1            DATA 0x8b
0000            107   _TH1            DATA 0x8d
0000            108   _RL0            DATA 0xf2
0000            109   _RH0            DATA 0xf4
0000            110   _RL1            DATA 0xf3
0000            111   _RH1            DATA 0xf5
0000            112   _WDTRST         DATA 0xa6
0000            113   _WDTPRG         DATA 0xa7
0000            114   _T2CON          DATA 0xc8
0000            115   _T2MOD          DATA 0xc9
0000            116   _RCAP2H         DATA 0xcb
0000            117   _RCAP2L         DATA 0xca
0000            118   _TH2            DATA 0xcd
0000            119   _TL2            DATA 0xcc
0000            120   _SPCON          DATA 0xc3
0000            121   _SPSTA          DATA 0xc4
0000            122   _SPDAT          DATA 0xc5
0000            123   _SSCON          DATA 0x93
0000            124   _SSCS           DATA 0x94
0000            125   _SSDAT          DATA 0x95
0000            126   _SSADR          DATA 0x96
0000            127   _KBLS           DATA 0x9c
0000            128   _KBE            DATA 0x9d
0000            129   _KBF            DATA 0x9e
0000            130   _KBMOD          DATA 0x9f
0000            131   _BMSEL          DATA 0x92
0000            132   _FCON           DATA 0xd2
0000            133   _EECON          DATA 0xd2
0000            134   _ACSRA          DATA 0xa3
0000            135   _ACSRB          DATA 0xab
0000            136   _AREF           DATA 0xbd
0000            137   _DADC           DATA 0xa4
0000            138   _DADI           DATA 0xa5
0000            139   _DADL           DATA 0xac
0000            140   _DADH           DATA 0xad
0000            141   _CCON           DATA 0xd8
0000            142   _CMOD           DATA 0xd9
0000            143   _CL             DATA 0xe9
0000            144   _CH             DATA 0xf9
0000            145   _CCAPM0         DATA 0xda
0000            146   _CCAPM1         DATA 0xdb
0000            147   _CCAPM2         DATA 0xdc
0000            148   _CCAPM3         DATA 0xdd
0000            149   _CCAPM4         DATA 0xde
0000            150   _CCAP0H         DATA 0xfa
0000            151   _CCAP1H         DATA 0xfb
0000            152   _CCAP2H         DATA 0xfc
0000            153   _CCAP3H         DATA 0xfd
0000            154   _CCAP4H         DATA 0xfe
0000            155   _CCAP0L         DATA 0xea
0000            156   _CCAP1L         DATA 0xeb
0000            157   _CCAP2L         DATA 0xec
0000            158   _CCAP3L         DATA 0xed
0000            159   _CCAP4L         DATA 0xee
0000            160   ;--------------------------------------------------------
0000            161   ; special function bits
0000            162   ;--------------------------------------------------------
0000            163   _ACC_0          BIT 0xe0
0000            164   _ACC_1          BIT 0xe1
0000            165   _ACC_2          BIT 0xe2
0000            166   _ACC_3          BIT 0xe3
0000            167   _ACC_4          BIT 0xe4
0000            168   _ACC_5          BIT 0xe5
0000            169   _ACC_6          BIT 0xe6
0000            170   _ACC_7          BIT 0xe7
0000            171   _B_0            BIT 0xf0
0000            172   _B_1            BIT 0xf1
0000            173   _B_2            BIT 0xf2
0000            174   _B_3            BIT 0xf3
0000            175   _B_4            BIT 0xf4
0000            176   _B_5            BIT 0xf5
0000            177   _B_6            BIT 0xf6
0000            178   _B_7            BIT 0xf7
0000            179   _P              BIT 0xd0
0000            180   _F1             BIT 0xd1
0000            181   _OV             BIT 0xd2
0000            182   _RS0            BIT 0xd3
0000            183   _RS1            BIT 0xd4
0000            184   _F0             BIT 0xd5
0000            185   _AC             BIT 0xd6
0000            186   _CY             BIT 0xd7
0000            187   _EX0            BIT 0xa8
0000            188   _ET0            BIT 0xa9
0000            189   _EX1            BIT 0xaa
0000            190   _ET1            BIT 0xab
0000            191   _ES             BIT 0xac
0000            192   _ET2            BIT 0xad
0000            193   _EC             BIT 0xae
0000            194   _EA             BIT 0xaf
0000            195   _PX0            BIT 0xb8
0000            196   _PT0            BIT 0xb9
0000            197   _PX1            BIT 0xba
0000            198   _PT1            BIT 0xbb
0000            199   _PS             BIT 0xbc
0000            200   _PT2            BIT 0xbd
0000            201   _IP0D           BIT 0xbf
0000            202   _PPCL           BIT 0xbe
0000            203   _PT2L           BIT 0xbd
0000            204   _PLS            BIT 0xbc
0000            205   _PT1L           BIT 0xbb
0000            206   _PX1L           BIT 0xba
0000            207   _PT0L           BIT 0xb9
0000            208   _PX0L           BIT 0xb8
0000            209   _P0_0           BIT 0x80
0000            210   _P0_1           BIT 0x81
0000            211   _P0_2           BIT 0x82
0000            212   _P0_3           BIT 0x83
0000            213   _P0_4           BIT 0x84
0000            214   _P0_5           BIT 0x85
0000            215   _P0_6           BIT 0x86
0000            216   _P0_7           BIT 0x87
0000            217   _P1_0           BIT 0x90
0000            218   _P1_1           BIT 0x91
0000            219   _P1_2           BIT 0x92
0000            220   _P1_3           BIT 0x93
0000            221   _P1_4           BIT 0x94
0000            222   _P1_5           BIT 0x95
0000            223   _P1_6           BIT 0x96
0000            224   _P1_7           BIT 0x97
0000            225   _P2_0           BIT 0xa0
0000            226   _P2_1           BIT 0xa1
0000            227   _P2_2           BIT 0xa2
0000            228   _P2_3           BIT 0xa3
0000            229   _P2_4           BIT 0xa4
0000            230   _P2_5           BIT 0xa5
0000            231   _P2_6           BIT 0xa6
0000            232   _P2_7           BIT 0xa7
0000            233   _P3_0           BIT 0xb0
0000            234   _P3_1           BIT 0xb1
0000            235   _P3_2           BIT 0xb2
0000            236   _P3_3           BIT 0xb3
0000            237   _P3_4           BIT 0xb4
0000            238   _P3_5           BIT 0xb5
0000            239   _P3_6           BIT 0xb6
0000            240   _P3_7           BIT 0xb7
0000            241   _RXD            BIT 0xb0
0000            242   _TXD            BIT 0xb1
0000            243   _INT0           BIT 0xb2
0000            244   _INT1           BIT 0xb3
0000            245   _T0             BIT 0xb4
0000            246   _T1             BIT 0xb5
0000            247   _WR             BIT 0xb6
0000            248   _RD             BIT 0xb7
0000            249   _P4_0           BIT 0xc0
0000            250   _P4_1           BIT 0xc1
0000            251   _P4_2           BIT 0xc2
0000            252   _P4_3           BIT 0xc3
0000            253   _P4_4           BIT 0xc4
0000            254   _P4_5           BIT 0xc5
0000            255   _P4_6           BIT 0xc6
0000            256   _P4_7           BIT 0xc7
0000            257   _RI             BIT 0x98
0000            258   _TI             BIT 0x99
0000            259   _RB8            BIT 0x9a
0000            260   _TB8            BIT 0x9b
0000            261   _REN            BIT 0x9c
0000            262   _SM2            BIT 0x9d
0000            263   _SM1            BIT 0x9e
0000            264   _SM0            BIT 0x9f
0000            265   _IT0            BIT 0x88
0000            266   _IE0            BIT 0x89
0000            267   _IT1            BIT 0x8a
0000            268   _IE1            BIT 0x8b
0000            269   _TR0            BIT 0x8c
0000            270   _TF0            BIT 0x8d
0000            271   _TR1            BIT 0x8e
0000            272   _TF1            BIT 0x8f
0000            273   _CP_RL2         BIT 0xc8
0000            274   _C_T2           BIT 0xc9
0000            275   _TR2            BIT 0xca
0000            276   _EXEN2          BIT 0xcb
0000            277   _TCLK           BIT 0xcc
0000            278   _RCLK           BIT 0xcd
0000            279   _EXF2           BIT 0xce
0000            280   _TF2            BIT 0xcf
0000            281   _CF             BIT 0xdf
0000            282   _CR             BIT 0xde
0000            283   _CCF4           BIT 0xdc
0000            284   _CCF3           BIT 0xdb
0000            285   _CCF2           BIT 0xda
0000            286   _CCF1           BIT 0xd9
0000            287   _CCF0           BIT 0xd8
0000            288   ;--------------------------------------------------------
0000            289   ; overlayable register banks
0000            290   ;--------------------------------------------------------
0000            291            rbank0 segment data overlay
0000            292   ;--------------------------------------------------------
0000            293   ; internal ram data
0000            294   ;--------------------------------------------------------
0000            295            rseg R_DSEG
0000            296   _c:
0000            297            ds 17
0011            298   _LCDprint_PARM_2:
0011            299            ds 1
0012            300   ;--------------------------------------------------------
0012            301   ; overlayable items in internal ram 
0012            302   ;--------------------------------------------------------
0000            303            rseg    R_OSEG
0000            304   ;--------------------------------------------------------
0000            305   ; indirectly addressable internal ram data
0000            306   ;--------------------------------------------------------
0000            307            rseg R_ISEG
0000            308   ;--------------------------------------------------------
0000            309   ; absolute internal ram data
0000            310   ;--------------------------------------------------------
0000            311            DSEG
0000            312   ;--------------------------------------------------------
0000            313   ; bit data
0000            314   ;--------------------------------------------------------
0000            315            rseg R_BSEG
0000            316   _LCDprint_PARM_3:
0000            317            DBIT    1
0001            318   ;--------------------------------------------------------
0001            319   ; paged external ram data
0001            320   ;--------------------------------------------------------
0000            321            rseg R_PSEG
0000            322   ;--------------------------------------------------------
0000            323   ; external ram data
0000            324   ;--------------------------------------------------------
0000            325            rseg R_XSEG
0000            326   ;--------------------------------------------------------
0000            327   ; absolute external ram data
0000            328   ;--------------------------------------------------------
0000            329            XSEG
0000            330   ;--------------------------------------------------------
0000            331   ; external initialized ram data
0000            332   ;--------------------------------------------------------
0000            333            rseg R_IXSEG
0000            334            rseg R_HOME
0000            335            rseg R_GSINIT
0000            336            rseg R_CSEG
0000            337   ;--------------------------------------------------------
0000            338   ; Reset entry point and interrupt vectors
0000            339   ;--------------------------------------------------------
0000            340            CSEG at 0x0000
0000 020100     341            ljmp    _crt0
002B            342            CSEG at 0x002b
002B 020100     343            ljmp    _Timer2_ISR
002E            344   ;--------------------------------------------------------
002E            345   ; global & static initialisations
002E            346   ;--------------------------------------------------------
0000            347            rseg R_HOME
0000            348            rseg R_GSINIT
0000            349            rseg R_GSINIT
0000            350   ;--------------------------------------------------------
0000            351   ; data variables initialization
0000            352   ;--------------------------------------------------------
0000            353            rseg R_DINIT
0000            354            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            355   ;--------------------------------------------------------
0000            356   ; code
0000            357   ;--------------------------------------------------------
0000            358            rseg R_CSEG
0000            359   ;------------------------------------------------------------
0000            360   ;Allocation info for local variables in function 'SPIWrite'
0000            361   ;------------------------------------------------------------
0000            362   ;out_byte                  Allocated to registers 
0000            363   ;------------------------------------------------------------
0000            364   ;        C:\Users\kiera\Downloads\adc_spi.c:36: unsigned char SPIWrite(unsigned char out_byte)
0000            365   ;        -----------------------------------------
0000            366   ;         function SPIWrite
0000            367   ;        -----------------------------------------
0000            368   _SPIWrite:
0000            369            using   0
0000 8582E0     370            mov     _ACC,dpl
0003            371   ;        C:\Users\kiera\Downloads\adc_spi.c:41: BB_MOSI=ACC_7; BB_SCLK=1; B_7=BB_MISO; BB_SCLK=0;
0003 A2E7       372            mov     c,_ACC_7
0005 92A1       373            mov     _P2_1,c
0007 D2A3       374            setb    _P2_3
0009 A2A2       375            mov     c,_P2_2
000B 92F7       376            mov     _B_7,c
000D C2A3       377            clr     _P2_3
000F            378   ;        C:\Users\kiera\Downloads\adc_spi.c:42: BB_MOSI=ACC_6; BB_SCLK=1; B_6=BB_MISO; BB_SCLK=0;
000F A2E6       379            mov     c,_ACC_6
0011 92A1       380            mov     _P2_1,c
0013 D2A3       381            setb    _P2_3
0015 A2A2       382            mov     c,_P2_2
0017 92F6       383            mov     _B_6,c
0019 C2A3       384            clr     _P2_3
001B            385   ;        C:\Users\kiera\Downloads\adc_spi.c:43: BB_MOSI=ACC_5; BB_SCLK=1; B_5=BB_MISO; BB_SCLK=0;
001B A2E5       386            mov     c,_ACC_5
001D 92A1       387            mov     _P2_1,c
001F D2A3       388            setb    _P2_3
0021 A2A2       389            mov     c,_P2_2
0023 92F5       390            mov     _B_5,c
0025 C2A3       391            clr     _P2_3
0027            392   ;        C:\Users\kiera\Downloads\adc_spi.c:44: BB_MOSI=ACC_4; BB_SCLK=1; B_4=BB_MISO; BB_SCLK=0;
0027 A2E4       393            mov     c,_ACC_4
0029 92A1       394            mov     _P2_1,c
002B D2A3       395            setb    _P2_3
002D A2A2       396            mov     c,_P2_2
002F 92F4       397            mov     _B_4,c
0031 C2A3       398            clr     _P2_3
0033            399   ;        C:\Users\kiera\Downloads\adc_spi.c:45: BB_MOSI=ACC_3; BB_SCLK=1; B_3=BB_MISO; BB_SCLK=0;
0033 A2E3       400            mov     c,_ACC_3
0035 92A1       401            mov     _P2_1,c
0037 D2A3       402            setb    _P2_3
0039 A2A2       403            mov     c,_P2_2
003B 92F3       404            mov     _B_3,c
003D C2A3       405            clr     _P2_3
003F            406   ;        C:\Users\kiera\Downloads\adc_spi.c:46: BB_MOSI=ACC_2; BB_SCLK=1; B_2=BB_MISO; BB_SCLK=0;
003F A2E2       407            mov     c,_ACC_2
0041 92A1       408            mov     _P2_1,c
0043 D2A3       409            setb    _P2_3
0045 A2A2       410            mov     c,_P2_2
0047 92F2       411            mov     _B_2,c
0049 C2A3       412            clr     _P2_3
004B            413   ;        C:\Users\kiera\Downloads\adc_spi.c:47: BB_MOSI=ACC_1; BB_SCLK=1; B_1=BB_MISO; BB_SCLK=0;
004B A2E1       414            mov     c,_ACC_1
004D 92A1       415            mov     _P2_1,c
004F D2A3       416            setb    _P2_3
0051 A2A2       417            mov     c,_P2_2
0053 92F1       418            mov     _B_1,c
0055 C2A3       419            clr     _P2_3
0057            420   ;        C:\Users\kiera\Downloads\adc_spi.c:48: BB_MOSI=ACC_0; BB_SCLK=1; B_0=BB_MISO; BB_SCLK=0;
0057 A2E0       421            mov     c,_ACC_0
0059 92A1       422            mov     _P2_1,c
005B D2A3       423            setb    _P2_3
005D A2A2       424            mov     c,_P2_2
005F 92F0       425            mov     _B_0,c
0061 C2A3       426            clr     _P2_3
0063            427   ;        C:\Users\kiera\Downloads\adc_spi.c:50: return B;
0063 85F082     428            mov     dpl,_B
0066 22         429            ret
0067            430   ;------------------------------------------------------------
0067            431   ;Allocation info for local variables in function 'wait_us'
0067            432   ;------------------------------------------------------------
0067            433   ;x                         Allocated to registers r2 
0067            434   ;j                         Allocated to registers r2 r3 
0067            435   ;------------------------------------------------------------
0067            436   ;        C:\Users\kiera\Downloads\adc_spi.c:55: void wait_us (unsigned char x)
0067            437   ;        -----------------------------------------
0067            438   ;         function wait_us
0067            439   ;        -----------------------------------------
0067            440   _wait_us:
0067 AA82       441            mov     r2,dpl
0069            442   ;        C:\Users\kiera\Downloads\adc_spi.c:59: TR0=0; // Stop timer 0
0069 C28C       443            clr     _TR0
006B            444   ;        C:\Users\kiera\Downloads\adc_spi.c:60: TMOD&=0xf0; // Clear the configuration bits for timer 0
006B 5389F0     445            anl     _TMOD,#0xF0
006E            446   ;        C:\Users\kiera\Downloads\adc_spi.c:61: TMOD|=0x01; // Mode 1: 16-bit timer
006E 438901     447            orl     _TMOD,#0x01
0071            448   ;        C:\Users\kiera\Downloads\adc_spi.c:63: if(x>5) x-=5; // Subtract the overhead
0071 EA         449            mov     a,r2
0072 24FA       450            add     a,#0xff - 0x05
0074 5001       451            jnc     L003002?
0076 EA         452            mov     a,r2
0077 24FB       453            add     a,#0xfb
0079 FA         454            mov     r2,a
007A 8001       455            sjmp    L003003?
007C            456   L003002?:
007C            457   ;        C:\Users\kiera\Downloads\adc_spi.c:64: else x=1;
007C 7A01       458            mov     r2,#0x01
007E            459   L003003?:
007E            460   ;        C:\Users\kiera\Downloads\adc_spi.c:66: j=-ONE_USEC*x;
007E 8A00       461            mov     __mullong_PARM_2,r2
0080 750100     462            mov     (__mullong_PARM_2 + 1),#0x00
0083 750200     463            mov     (__mullong_PARM_2 + 2),#0x00
0086 750300     464            mov     (__mullong_PARM_2 + 3),#0x00
0089 90FFEA     465            mov     dptr,#0xFFEA
008C 74FF       466            mov     a,#0xFF
008E F5F0       467            mov     b,a
0090 120100     468            lcall   __mullong
0093 AA82       469            mov     r2,dpl
0095 AB83       470            mov     r3,dph
0097            471   ;        C:\Users\kiera\Downloads\adc_spi.c:67: TF0=0;
0097 C28D       472            clr     _TF0
0099            473   ;        C:\Users\kiera\Downloads\adc_spi.c:68: TH0=j/0x100;
0099 8B04       474            mov     ar4,r3
009B 7D00       475            mov     r5,#0x00
009D 8C8C       476            mov     _TH0,r4
009F            477   ;        C:\Users\kiera\Downloads\adc_spi.c:69: TL0=j%0x100;
009F 7B00       478            mov     r3,#0x00
00A1 8A8A       479            mov     _TL0,r2
00A3            480   ;        C:\Users\kiera\Downloads\adc_spi.c:70: TR0=1; // Start timer 0
00A3 D28C       481            setb    _TR0
00A5            482   ;        C:\Users\kiera\Downloads\adc_spi.c:71: while(TF0==0); //Wait for overflow
00A5            483   L003004?:
00A5 308D78     484            jnb     _TF0,L003004?
00A8 22         485            ret
00A9            486   ;------------------------------------------------------------
00A9            487   ;Allocation info for local variables in function 'waitms'
00A9            488   ;------------------------------------------------------------
00A9            489   ;ms                        Allocated to registers r2 r3 
00A9            490   ;j                         Allocated to registers r4 r5 
00A9            491   ;k                         Allocated to registers r6 
00A9            492   ;------------------------------------------------------------
00A9            493   ;        C:\Users\kiera\Downloads\adc_spi.c:74: void waitms (unsigned int ms)
00A9            494   ;        -----------------------------------------
00A9            495   ;         function waitms
00A9            496   ;        -----------------------------------------
00A9            497   _waitms:
00A9 AA82       498            mov     r2,dpl
00AB AB83       499            mov     r3,dph
00AD            500   ;        C:\Users\kiera\Downloads\adc_spi.c:78: for(j=0; j<ms; j++)
00AD 7C00       501            mov     r4,#0x00
00AF 7D00       502            mov     r5,#0x00
00B1            503   L004005?:
00B1 C3         504            clr     c
00B2 EC         505            mov     a,r4
00B3 9A         506            subb    a,r2
00B4 ED         507            mov     a,r5
00B5 9B         508            subb    a,r3
00B6 5001       509            jnc     L004009?
00B8            510   ;        C:\Users\kiera\Downloads\adc_spi.c:79: for (k=0; k<4; k++) wait_us(250);
00B8 7E00       511            mov     r6,#0x00
00BA            512   L004001?:
00BA BE0480     513            cjne    r6,#0x04,L004018?
00BD            514   L004018?:
00BD 5001       515            jnc     L004007?
00BF 7582FA     516            mov     dpl,#0xFA
00C2 C002       517            push    ar2
00C4 C003       518            push    ar3
00C6 C004       519            push    ar4
00C8 C005       520            push    ar5
00CA C006       521            push    ar6
00CC 120100     522            lcall   _wait_us
00CF D006       523            pop     ar6
00D1 D005       524            pop     ar5
00D3 D004       525            pop     ar4
00D5 D003       526            pop     ar3
00D7 D002       527            pop     ar2
00D9 0E         528            inc     r6
00DA 8001       529            sjmp    L004001?
00DC            530   L004007?:
00DC            531   ;        C:\Users\kiera\Downloads\adc_spi.c:78: for(j=0; j<ms; j++)
00DC 0C         532            inc     r4
00DD BC00B8     533            cjne    r4,#0x00,L004005?
00E0 0D         534            inc     r5
00E1 8001       535            sjmp    L004005?
00E3            536   L004009?:
00E3 22         537            ret
00E4            538   ;------------------------------------------------------------
00E4            539   ;Allocation info for local variables in function 'LCD_pulse'
00E4            540   ;------------------------------------------------------------
00E4            541   ;------------------------------------------------------------
00E4            542   ;        C:\Users\kiera\Downloads\adc_spi.c:82: void LCD_pulse (void)
00E4            543   ;        -----------------------------------------
00E4            544   ;         function LCD_pulse
00E4            545   ;        -----------------------------------------
00E4            546   _LCD_pulse:
00E4            547   ;        C:\Users\kiera\Downloads\adc_spi.c:84: LCD_E=1;
00E4 D2B3       548            setb    _P3_3
00E6            549   ;        C:\Users\kiera\Downloads\adc_spi.c:85: wait_us(40);
00E6 758228     550            mov     dpl,#0x28
00E9 120100     551            lcall   _wait_us
00EC            552   ;        C:\Users\kiera\Downloads\adc_spi.c:86: LCD_E=0;
00EC C2B3       553            clr     _P3_3
00EE 22         554            ret
00EF            555   ;------------------------------------------------------------
00EF            556   ;Allocation info for local variables in function 'LCD_byte'
00EF            557   ;------------------------------------------------------------
00EF            558   ;x                         Allocated to registers r2 
00EF            559   ;------------------------------------------------------------
00EF            560   ;        C:\Users\kiera\Downloads\adc_spi.c:89: void LCD_byte (unsigned char x)
00EF            561   ;        -----------------------------------------
00EF            562   ;         function LCD_byte
00EF            563   ;        -----------------------------------------
00EF            564   _LCD_byte:
00EF AA82       565            mov     r2,dpl
00F1            566   ;        C:\Users\kiera\Downloads\adc_spi.c:92: ACC=x; //Send high nible
00F1 8AE0       567            mov     _ACC,r2
00F3            568   ;        C:\Users\kiera\Downloads\adc_spi.c:93: LCD_D7=ACC_7;
00F3 A2E7       569            mov     c,_ACC_7
00F5 92B7       570            mov     _P3_7,c
00F7            571   ;        C:\Users\kiera\Downloads\adc_spi.c:94: LCD_D6=ACC_6;
00F7 A2E6       572            mov     c,_ACC_6
00F9 92B6       573            mov     _P3_6,c
00FB            574   ;        C:\Users\kiera\Downloads\adc_spi.c:95: LCD_D5=ACC_5;
00FB A2E5       575            mov     c,_ACC_5
00FD 92B5       576            mov     _P3_5,c
00FF            577   ;        C:\Users\kiera\Downloads\adc_spi.c:96: LCD_D4=ACC_4;
00FF A2E4       578            mov     c,_ACC_4
0101 92B4       579            mov     _P3_4,c
0103            580   ;        C:\Users\kiera\Downloads\adc_spi.c:97: LCD_pulse();
0103 C002       581            push    ar2
0105 120100     582            lcall   _LCD_pulse
0108            583   ;        C:\Users\kiera\Downloads\adc_spi.c:98: wait_us(40);
0108 758228     584            mov     dpl,#0x28
010B 120100     585            lcall   _wait_us
010E D002       586            pop     ar2
0110            587   ;        C:\Users\kiera\Downloads\adc_spi.c:99: ACC=x; //Send low nible
0110 8AE0       588            mov     _ACC,r2
0112            589   ;        C:\Users\kiera\Downloads\adc_spi.c:100: LCD_D7=ACC_3;
0112 A2E3       590            mov     c,_ACC_3
0114 92B7       591            mov     _P3_7,c
0116            592   ;        C:\Users\kiera\Downloads\adc_spi.c:101: LCD_D6=ACC_2;
0116 A2E2       593            mov     c,_ACC_2
0118 92B6       594            mov     _P3_6,c
011A            595   ;        C:\Users\kiera\Downloads\adc_spi.c:102: LCD_D5=ACC_1;
011A A2E1       596            mov     c,_ACC_1
011C 92B5       597            mov     _P3_5,c
011E            598   ;        C:\Users\kiera\Downloads\adc_spi.c:103: LCD_D4=ACC_0;
011E A2E0       599            mov     c,_ACC_0
0120 92B4       600            mov     _P3_4,c
0122            601   ;        C:\Users\kiera\Downloads\adc_spi.c:104: LCD_pulse();
0122 020100     602            ljmp    _LCD_pulse
0125            603   ;------------------------------------------------------------
0125            604   ;Allocation info for local variables in function 'WriteCommand'
0125            605   ;------------------------------------------------------------
0125            606   ;x                         Allocated to registers r2 
0125            607   ;------------------------------------------------------------
0125            608   ;        C:\Users\kiera\Downloads\adc_spi.c:108: void WriteCommand (unsigned char x)
0125            609   ;        -----------------------------------------
0125            610   ;         function WriteCommand
0125            611   ;        -----------------------------------------
0125            612   _WriteCommand:
0125 AA82       613            mov     r2,dpl
0127            614   ;        C:\Users\kiera\Downloads\adc_spi.c:110: LCD_RS=0;
0127 C2B2       615            clr     _P3_2
0129            616   ;        C:\Users\kiera\Downloads\adc_spi.c:111: LCD_byte(x);
0129 8A82       617            mov     dpl,r2
012B 120100     618            lcall   _LCD_byte
012E            619   ;        C:\Users\kiera\Downloads\adc_spi.c:112: waitms(5);
012E 900005     620            mov     dptr,#0x0005
0131 020100     621            ljmp    _waitms
0134            622   ;------------------------------------------------------------
0134            623   ;Allocation info for local variables in function '_c51_external_startup'
0134            624   ;------------------------------------------------------------
0134            625   ;------------------------------------------------------------
0134            626   ;        C:\Users\kiera\Downloads\adc_spi.c:115: unsigned char _c51_external_startup(void)
0134            627   ;        -----------------------------------------
0134            628   ;         function _c51_external_startup
0134            629   ;        -----------------------------------------
0134            630   __c51_external_startup:
0134            631   ;        C:\Users\kiera\Downloads\adc_spi.c:117: AUXR=0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
0134 758E11     632            mov     _AUXR,#0x11
0137            633   ;        C:\Users\kiera\Downloads\adc_spi.c:120: P0M0=0x00; P0M1=0x00;    
0137 75E600     634            mov     _P0M0,#0x00
013A 75E700     635            mov     _P0M1,#0x00
013D            636   ;        C:\Users\kiera\Downloads\adc_spi.c:121: P1M0=0x00; P1M1=0x00;    
013D 75D600     637            mov     _P1M0,#0x00
0140 75D700     638            mov     _P1M1,#0x00
0143            639   ;        C:\Users\kiera\Downloads\adc_spi.c:122: P2M0=0x00; P2M1=0x00;    
0143 75CE00     640            mov     _P2M0,#0x00
0146 75CF00     641            mov     _P2M1,#0x00
0149            642   ;        C:\Users\kiera\Downloads\adc_spi.c:123: P3M0=0x00; P3M1=0x00;
0149 75C600     643            mov     _P3M0,#0x00
014C 75C700     644            mov     _P3M1,#0x00
014F            645   ;        C:\Users\kiera\Downloads\adc_spi.c:126: ADC_CE=0;  // Disable SPI access to MCP3008
014F C2A0       646            clr     _P2_0
0151            647   ;        C:\Users\kiera\Downloads\adc_spi.c:127: BB_SCLK=0; // Resting state of SPI clock is '0'
0151 C2A3       648            clr     _P2_3
0153            649   ;        C:\Users\kiera\Downloads\adc_spi.c:128: BB_MISO=1; // Write '1' to MISO before using as input
0153 D2A2       650            setb    _P2_2
0155            651   ;        C:\Users\kiera\Downloads\adc_spi.c:131: PCON|=0x80;
0155 438780     652            orl     _PCON,#0x80
0158            653   ;        C:\Users\kiera\Downloads\adc_spi.c:132: SCON = 0x52;
0158 759852     654            mov     _SCON,#0x52
015B            655   ;        C:\Users\kiera\Downloads\adc_spi.c:133: BDRCON=0;
015B 759B00     656            mov     _BDRCON,#0x00
015E            657   ;        C:\Users\kiera\Downloads\adc_spi.c:137: BRL=BRG_VAL;
015E 759AF4     658            mov     _BRL,#0xF4
0161            659   ;        C:\Users\kiera\Downloads\adc_spi.c:138: BDRCON=BRR|TBCK|RBCK|SPD;
0161 759B1E     660            mov     _BDRCON,#0x1E
0164            661   ;        C:\Users\kiera\Downloads\adc_spi.c:140: CLKREG=0x00; // TPS=0000B
0164 75AE00     662            mov     _CLKREG,#0x00
0167            663   ;        C:\Users\kiera\Downloads\adc_spi.c:142: PCON|=0x80;
0167 438780     664            orl     _PCON,#0x80
016A            665   ;        C:\Users\kiera\Downloads\adc_spi.c:143: SCON = 0x52;
016A 759852     666            mov     _SCON,#0x52
016D            667   ;        C:\Users\kiera\Downloads\adc_spi.c:144: BDRCON=0;
016D 759B00     668            mov     _BDRCON,#0x00
0170            669   ;        C:\Users\kiera\Downloads\adc_spi.c:148: BRL=BRG_VAL;
0170 759AF4     670            mov     _BRL,#0xF4
0173            671   ;        C:\Users\kiera\Downloads\adc_spi.c:149: BDRCON=BRR|TBCK|RBCK|SPD;
0173 759B1E     672            mov     _BDRCON,#0x1E
0176            673   ;        C:\Users\kiera\Downloads\adc_spi.c:152: T2CON=0x00;   // Stop Timer2; Clear TF2;
0176 75C800     674            mov     _T2CON,#0x00
0179            675   ;        C:\Users\kiera\Downloads\adc_spi.c:153: RCAP2H=(0x10000L-(CLK/(2*DEFAULT_F)))/0x100; // Change reload value for new frequency high
0179 75CBEA     676            mov     _RCAP2H,#0xEA
017C            677   ;        C:\Users\kiera\Downloads\adc_spi.c:154: RCAP2L=(0x10000L-(CLK/(2*DEFAULT_F)))%0x100; // Change reload value for new frequency low
017C 75CA67     678            mov     _RCAP2L,#0x67
017F            679   ;        C:\Users\kiera\Downloads\adc_spi.c:155: TH2=0xff; // Set to reload immediately
017F 75CDFF     680            mov     _TH2,#0xFF
0182            681   ;        C:\Users\kiera\Downloads\adc_spi.c:156: TL2=0xff; // Set to reload immediately
0182 75CCFF     682            mov     _TL2,#0xFF
0185            683   ;        C:\Users\kiera\Downloads\adc_spi.c:157: ET2=1; // Enable Timer2 interrupts
0185 D2AD       684            setb    _ET2
0187            685   ;        C:\Users\kiera\Downloads\adc_spi.c:158: TR2=1; // Start Timer2
0187 D2CA       686            setb    _TR2
0189            687   ;        C:\Users\kiera\Downloads\adc_spi.c:159: EA=1; // Global interrupt enable
0189 D2AF       688            setb    _EA
018B            689   ;        C:\Users\kiera\Downloads\adc_spi.c:161: return 0;
018B 758200     690            mov     dpl,#0x00
018E 22         691            ret
018F            692   ;------------------------------------------------------------
018F            693   ;Allocation info for local variables in function 'LCD_4BIT'
018F            694   ;------------------------------------------------------------
018F            695   ;------------------------------------------------------------
018F            696   ;        C:\Users\kiera\Downloads\adc_spi.c:164: void LCD_4BIT (void)
018F            697   ;        -----------------------------------------
018F            698   ;         function LCD_4BIT
018F            699   ;        -----------------------------------------
018F            700   _LCD_4BIT:
018F            701   ;        C:\Users\kiera\Downloads\adc_spi.c:166: LCD_E=0; // Resting state of LCD's enable is zero
018F C2B3       702            clr     _P3_3
0191            703   ;        C:\Users\kiera\Downloads\adc_spi.c:168: waitms(20);
0191 900014     704            mov     dptr,#0x0014
0194 120100     705            lcall   _waitms
0197            706   ;        C:\Users\kiera\Downloads\adc_spi.c:170: WriteCommand(0x33);
0197 758233     707            mov     dpl,#0x33
019A 120100     708            lcall   _WriteCommand
019D            709   ;        C:\Users\kiera\Downloads\adc_spi.c:171: WriteCommand(0x33);
019D 758233     710            mov     dpl,#0x33
01A0 120100     711            lcall   _WriteCommand
01A3            712   ;        C:\Users\kiera\Downloads\adc_spi.c:172: WriteCommand(0x32); // Change to 4-bit mode
01A3 758232     713            mov     dpl,#0x32
01A6 120100     714            lcall   _WriteCommand
01A9            715   ;        C:\Users\kiera\Downloads\adc_spi.c:174: WriteCommand(0x28);
01A9 758228     716            mov     dpl,#0x28
01AC 120100     717            lcall   _WriteCommand
01AF            718   ;        C:\Users\kiera\Downloads\adc_spi.c:175: WriteCommand(0x0c);
01AF 75820C     719            mov     dpl,#0x0C
01B2 120100     720            lcall   _WriteCommand
01B5            721   ;        C:\Users\kiera\Downloads\adc_spi.c:176: WriteCommand(0x01); // Clear screen command (takes some time)
01B5 758201     722            mov     dpl,#0x01
01B8 120100     723            lcall   _WriteCommand
01BB            724   ;        C:\Users\kiera\Downloads\adc_spi.c:177: waitms(20); // Wait for clear screen command to finsih.
01BB 900014     725            mov     dptr,#0x0014
01BE 020100     726            ljmp    _waitms
01C1            727   ;------------------------------------------------------------
01C1            728   ;Allocation info for local variables in function 'Timer2_ISR'
01C1            729   ;------------------------------------------------------------
01C1            730   ;------------------------------------------------------------
01C1            731   ;        C:\Users\kiera\Downloads\adc_spi.c:181: void Timer2_ISR (void) interrupt 5
01C1            732   ;        -----------------------------------------
01C1            733   ;         function Timer2_ISR
01C1            734   ;        -----------------------------------------
01C1            735   _Timer2_ISR:
01C1            736   ;        C:\Users\kiera\Downloads\adc_spi.c:183: TF2 = 0; // Clear Timer2 interrupt flag
01C1 C2CF       737            clr     _TF2
01C3            738   ;        C:\Users\kiera\Downloads\adc_spi.c:184: TONEOUT=!TONEOUT;
01C3 B280       739            cpl     _P0_0
01C5 32         740            reti
01C6            741   ;        eliminated unneeded push/pop psw
01C6            742   ;        eliminated unneeded push/pop dpl
01C6            743   ;        eliminated unneeded push/pop dph
01C6            744   ;        eliminated unneeded push/pop b
01C6            745   ;        eliminated unneeded push/pop acc
01C6            746   ;------------------------------------------------------------
01C6            747   ;Allocation info for local variables in function 'GetADC'
01C6            748   ;------------------------------------------------------------
01C6            749   ;channel                   Allocated to registers r2 
01C6            750   ;adc                       Allocated to registers r3 r4 
01C6            751   ;spid                      Allocated to registers r2 
01C6            752   ;------------------------------------------------------------
01C6            753   ;        C:\Users\kiera\Downloads\adc_spi.c:190: unsigned int volatile GetADC(unsigned char channel)
01C6            754   ;        -----------------------------------------
01C6            755   ;         function GetADC
01C6            756   ;        -----------------------------------------
01C6            757   _GetADC:
01C6 AA82       758            mov     r2,dpl
01C8            759   ;        C:\Users\kiera\Downloads\adc_spi.c:195: ADC_CE=0; // Activate the MCP3008 ADC.
01C8 C2A0       760            clr     _P2_0
01CA            761   ;        C:\Users\kiera\Downloads\adc_spi.c:197: SPIWrite(0x01);// Send the start bit.
01CA 758201     762            mov     dpl,#0x01
01CD C002       763            push    ar2
01CF 120100     764            lcall   _SPIWrite
01D2 D002       765            pop     ar2
01D4            766   ;        C:\Users\kiera\Downloads\adc_spi.c:198: spid=SPIWrite((channel*0x10)|0x80);     //Send single/diff* bit, D2, D1, and D0 bits.
01D4 EA         767            mov     a,r2
01D5 C4         768            swap    a
01D6 54F0       769            anl     a,#0xf0
01D8 FA         770            mov     r2,a
01D9 7480       771            mov     a,#0x80
01DB 4A         772            orl     a,r2
01DC F582       773            mov     dpl,a
01DE 120100     774            lcall   _SPIWrite
01E1 AA82       775            mov     r2,dpl
01E3            776   ;        C:\Users\kiera\Downloads\adc_spi.c:199: adc=((spid & 0x03)*0x100);// spid has the two most significant bits of the result.
01E3 7403       777            mov     a,#0x03
01E5 5A         778            anl     a,r2
01E6 FC         779            mov     r4,a
01E7 7B00       780            mov     r3,#0x00
01E9            781   ;        C:\Users\kiera\Downloads\adc_spi.c:200: spid=SPIWrite(0x00);// It doesn't matter what we send now.
01E9 758200     782            mov     dpl,#0x00
01EC C003       783            push    ar3
01EE C004       784            push    ar4
01F0 120100     785            lcall   _SPIWrite
01F3 AA82       786            mov     r2,dpl
01F5 D004       787            pop     ar4
01F7 D003       788            pop     ar3
01F9            789   ;        C:\Users\kiera\Downloads\adc_spi.c:201: adc+=spid;// spid contains the low part of the result. 
01F9 7D00       790            mov     r5,#0x00
01FB EA         791            mov     a,r2
01FC 2B         792            add     a,r3
01FD FB         793            mov     r3,a
01FE ED         794            mov     a,r5
01FF 3C         795            addc    a,r4
0200 FC         796            mov     r4,a
0201            797   ;        C:\Users\kiera\Downloads\adc_spi.c:203: ADC_CE=1; // Deactivate the MCP3008 ADC.
0201 D2A0       798            setb    _P2_0
0203            799   ;        C:\Users\kiera\Downloads\adc_spi.c:205: return adc;
0203 8B82       800            mov     dpl,r3
0205 8C83       801            mov     dph,r4
0207 22         802            ret
0208            803   ;------------------------------------------------------------
0208            804   ;Allocation info for local variables in function 'WriteData'
0208            805   ;------------------------------------------------------------
0208            806   ;x                         Allocated to registers r2 
0208            807   ;------------------------------------------------------------
0208            808   ;        C:\Users\kiera\Downloads\adc_spi.c:212: void WriteData (unsigned char x)
0208            809   ;        -----------------------------------------
0208            810   ;         function WriteData
0208            811   ;        -----------------------------------------
0208            812   _WriteData:
0208 AA82       813            mov     r2,dpl
020A            814   ;        C:\Users\kiera\Downloads\adc_spi.c:214: LCD_RS=1;
020A D2B2       815            setb    _P3_2
020C            816   ;        C:\Users\kiera\Downloads\adc_spi.c:215: LCD_byte(x);
020C 8A82       817            mov     dpl,r2
020E 120100     818            lcall   _LCD_byte
0211            819   ;        C:\Users\kiera\Downloads\adc_spi.c:216: waitms(2);
0211 900002     820            mov     dptr,#0x0002
0214 020100     821            ljmp    _waitms
0217            822   ;------------------------------------------------------------
0217            823   ;Allocation info for local variables in function 'LCDprint'
0217            824   ;------------------------------------------------------------
0217            825   ;line                      Allocated with name '_LCDprint_PARM_2'
0217            826   ;string                    Allocated to registers r2 r3 r4 
0217            827   ;j                         Allocated to registers r5 r6 
0217            828   ;------------------------------------------------------------
0217            829   ;        C:\Users\kiera\Downloads\adc_spi.c:221: void LCDprint(char * string, unsigned char line, bit clear)
0217            830   ;        -----------------------------------------
0217            831   ;         function LCDprint
0217            832   ;        -----------------------------------------
0217            833   _LCDprint:
0217 AA82       834            mov     r2,dpl
0219 AB83       835            mov     r3,dph
021B ACF0       836            mov     r4,b
021D            837   ;        C:\Users\kiera\Downloads\adc_spi.c:224: WriteCommand(line==2?0xc0:0x80);
021D 7402       838            mov     a,#0x02
021F B5E800     839            cjne    a,_LCDprint_PARM_2,L013013?
0222 7DC0       840            mov     r5,#0xC0
0224 8001       841            sjmp    L013014?
0226            842   L013013?:
0226 7D80       843            mov     r5,#0x80
0228            844   L013014?:
0228 8D82       845            mov     dpl,r5
022A C002       846            push    ar2
022C C003       847            push    ar3
022E C004       848            push    ar4
0230 120100     849            lcall   _WriteCommand
0233            850   ;        C:\Users\kiera\Downloads\adc_spi.c:225: waitms(5);
0233 900005     851            mov     dptr,#0x0005
0236 120100     852            lcall   _waitms
0239 D004       853            pop     ar4
023B D003       854            pop     ar3
023D D002       855            pop     ar2
023F            856   ;        C:\Users\kiera\Downloads\adc_spi.c:226: for(j=0; string[j]!=0; j++) WriteData(string[j]);// Write the message
023F 7D00       857            mov     r5,#0x00
0241 7E00       858            mov     r6,#0x00
0243            859   L013003?:
0243 ED         860            mov     a,r5
0244 2A         861            add     a,r2
0245 FF         862            mov     r7,a
0246 EE         863            mov     a,r6
0247 3B         864            addc    a,r3
0248 F8         865            mov     r0,a
0249 8C01       866            mov     ar1,r4
024B 8F82       867            mov     dpl,r7
024D 8883       868            mov     dph,r0
024F 89F0       869            mov     b,r1
0251 120100     870            lcall   __gptrget
0254 FF         871            mov     r7,a
0255 6001       872            jz      L013006?
0257 8F82       873            mov     dpl,r7
0259 C002       874            push    ar2
025B C003       875            push    ar3
025D C004       876            push    ar4
025F C005       877            push    ar5
0261 C006       878            push    ar6
0263 120100     879            lcall   _WriteData
0266 D006       880            pop     ar6
0268 D005       881            pop     ar5
026A D004       882            pop     ar4
026C D003       883            pop     ar3
026E D002       884            pop     ar2
0270 0D         885            inc     r5
0271 BD0080     886            cjne    r5,#0x00,L013003?
0274 0E         887            inc     r6
0275 8001       888            sjmp    L013003?
0277            889   L013006?:
0277            890   ;        C:\Users\kiera\Downloads\adc_spi.c:227: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
0277 309840     891            jnb     _LCDprint_PARM_3,L013011?
027A 8D02       892            mov     ar2,r5
027C 8E03       893            mov     ar3,r6
027E            894   L013007?:
027E C3         895            clr     c
027F EA         896            mov     a,r2
0280 9410       897            subb    a,#0x10
0282 EB         898            mov     a,r3
0283 6480       899            xrl     a,#0x80
0285 9480       900            subb    a,#0x80
0287 5001       901            jnc     L013011?
0289 758220     902            mov     dpl,#0x20
028C C002       903            push    ar2
028E C003       904            push    ar3
0290 120100     905            lcall   _WriteData
0293 D003       906            pop     ar3
0295 D002       907            pop     ar2
0297 0A         908            inc     r2
0298 BA0080     909            cjne    r2,#0x00,L013007?
029B 0B         910            inc     r3
029C 8001       911            sjmp    L013007?
029E            912   L013011?:
029E 22         913            ret
029F            914   ;------------------------------------------------------------
029F            915   ;Allocation info for local variables in function 'main'
029F            916   ;------------------------------------------------------------
029F            917   ;x                         Allocated to registers 
029F            918   ;f                         Allocated to registers 
029F            919   ;m                         Allocated to registers r2 r3 
029F            920   ;y                         Allocated to registers r2 r3 r4 r5 
029F            921   ;------------------------------------------------------------
029F            922   ;        C:\Users\kiera\Downloads\adc_spi.c:233: void main (void)
029F            923   ;        -----------------------------------------
029F            924   ;         function main
029F            925   ;        -----------------------------------------
029F            926   _main:
029F            927   ;        C:\Users\kiera\Downloads\adc_spi.c:239: waitms(500); // Gives time to putty to start before sending text
029F 9001F4     928            mov     dptr,#0x01F4
02A2 120100     929            lcall   _waitms
02A5            930   ;        C:\Users\kiera\Downloads\adc_spi.c:241: LCD_4BIT();
02A5 120100     931            lcall   _LCD_4BIT
02A8            932   ;        C:\Users\kiera\Downloads\adc_spi.c:243: LCDprint("Temp Detection", 1, 1);
02A8 75E801     933            mov     _LCDprint_PARM_2,#0x01
02AB D298       934            setb    _LCDprint_PARM_3
02AD 9082C0     935            mov     dptr,#__str_0
02B0 75F080     936            mov     b,#0x80
02B3 120100     937            lcall   _LCDprint
02B6            938   ;        C:\Users\kiera\Downloads\adc_spi.c:244: LCDprint("Status: Active", 2, 1);
02B6 75E802     939            mov     _LCDprint_PARM_2,#0x02
02B9 D298       940            setb    _LCDprint_PARM_3
02BB 908300     941            mov     dptr,#__str_1
02BE 75F080     942            mov     b,#0x80
02C1 120100     943            lcall   _LCDprint
02C4            944   ;        C:\Users\kiera\Downloads\adc_spi.c:245: while(1)
02C4            945   L014005?:
02C4            946   ;        C:\Users\kiera\Downloads\adc_spi.c:252: waitms(250);
02C4 9000FA     947            mov     dptr,#0x00FA
02C7 120100     948            lcall   _waitms
02CA            949   ;        C:\Users\kiera\Downloads\adc_spi.c:262: y=(GetADC(0)*VREF)/1023.0; // Convert the 10-bit integer from the ADC to voltage
02CA 758200     950            mov     dpl,#0x00
02CD 120100     951            lcall   _GetADC
02D0 120100     952            lcall   ___uint2fs
02D3 AA82       953            mov     r2,dpl
02D5 AB83       954            mov     r3,dph
02D7 ACF0       955            mov     r4,b
02D9 FD         956            mov     r5,a
02DA C002       957            push    ar2
02DC C003       958            push    ar3
02DE C004       959            push    ar4
02E0 C005       960            push    ar5
02E2 90126F     961            mov     dptr,#0x126F
02E5 75F083     962            mov     b,#0x83
02E8 7440       963            mov     a,#0x40
02EA 120100     964            lcall   ___fsmul
02ED AA82       965            mov     r2,dpl
02EF AB83       966            mov     r3,dph
02F1 ACF0       967            mov     r4,b
02F3 FD         968            mov     r5,a
02F4 E581       969            mov     a,sp
02F6 24FC       970            add     a,#0xfc
02F8 F581       971            mov     sp,a
02FA E4         972            clr     a
02FB C0E0       973            push    acc
02FD 74C0       974            mov     a,#0xC0
02FF C0E0       975            push    acc
0301 747F       976            mov     a,#0x7F
0303 C0E0       977            push    acc
0305 7444       978            mov     a,#0x44
0307 C0E0       979            push    acc
0309 8A82       980            mov     dpl,r2
030B 8B83       981            mov     dph,r3
030D 8CF0       982            mov     b,r4
030F ED         983            mov     a,r5
0310 120100     984            lcall   ___fsdiv
0313 AA82       985            mov     r2,dpl
0315 AB83       986            mov     r3,dph
0317 ACF0       987            mov     r4,b
0319 FD         988            mov     r5,a
031A E581       989            mov     a,sp
031C 24FC       990            add     a,#0xfc
031E F581       991            mov     sp,a
0320            992   ;        C:\Users\kiera\Downloads\adc_spi.c:263: y= (100*y)-273;
0320 C002       993            push    ar2
0322 C003       994            push    ar3
0324 C004       995            push    ar4
0326 C005       996            push    ar5
0328 900000     997            mov     dptr,#0x0000
032B 75F0C8     998            mov     b,#0xC8
032E 7442       999            mov     a,#0x42
0330 120100    1000            lcall   ___fsmul
0333 AE82      1001            mov     r6,dpl
0335 AF83      1002            mov     r7,dph
0337 A8F0      1003            mov     r0,b
0339 F9        1004            mov     r1,a
033A E581      1005            mov     a,sp
033C 24FC      1006            add     a,#0xfc
033E F581      1007            mov     sp,a
0340 E4        1008            clr     a
0341 C0E0      1009            push    acc
0343 7480      1010            mov     a,#0x80
0345 C0E0      1011            push    acc
0347 7488      1012            mov     a,#0x88
0349 C0E0      1013            push    acc
034B 7443      1014            mov     a,#0x43
034D C0E0      1015            push    acc
034F 8E82      1016            mov     dpl,r6
0351 8F83      1017            mov     dph,r7
0353 88F0      1018            mov     b,r0
0355 E9        1019            mov     a,r1
0356 120100    1020            lcall   ___fssub
0359 AA82      1021            mov     r2,dpl
035B AB83      1022            mov     r3,dph
035D ACF0      1023            mov     r4,b
035F FD        1024            mov     r5,a
0360 E581      1025            mov     a,sp
0362 24FC      1026            add     a,#0xfc
0364 F581      1027            mov     sp,a
0366           1028   ;        C:\Users\kiera\Downloads\adc_spi.c:264: printf("%5.3f ", y);
0366 C002      1029            push    ar2
0368 C003      1030            push    ar3
036A C004      1031            push    ar4
036C C005      1032            push    ar5
036E C002      1033            push    ar2
0370 C003      1034            push    ar3
0372 C004      1035            push    ar4
0374 C005      1036            push    ar5
0376 7400      1037            mov     a,#__str_2
0378 C0E0      1038            push    acc
037A 7485      1039            mov     a,#(__str_2 >> 8)
037C C0E0      1040            push    acc
037E 7480      1041            mov     a,#0x80
0380 C0E0      1042            push    acc
0382 120100    1043            lcall   _printf
0385 E581      1044            mov     a,sp
0387 24F9      1045            add     a,#0xf9
0389 F581      1046            mov     sp,a
038B           1047   ;        C:\Users\kiera\Downloads\adc_spi.c:265: LCDprint("Status: Active", 2, 1);
038B 75E802    1048            mov     _LCDprint_PARM_2,#0x02
038E D298      1049            setb    _LCDprint_PARM_3
0390 908300    1050            mov     dptr,#__str_1
0393 75F080    1051            mov     b,#0x80
0396 120100    1052            lcall   _LCDprint
0399           1053   ;        C:\Users\kiera\Downloads\adc_spi.c:272: printf("\n"); // Carriage return only.
0399 7480      1054            mov     a,#__str_3
039B C0E0      1055            push    acc
039D 7485      1056            mov     a,#(__str_3 >> 8)
039F C0E0      1057            push    acc
03A1 7480      1058            mov     a,#0x80
03A3 C0E0      1059            push    acc
03A5 120100    1060            lcall   _printf
03A8 1581      1061            dec     sp
03AA 1581      1062            dec     sp
03AC 1581      1063            dec     sp
03AE           1064   ;        C:\Users\kiera\Downloads\adc_spi.c:273: waitms(25);
03AE 900019    1065            mov     dptr,#0x0019
03B1 120100    1066            lcall   _waitms
03B4 D005      1067            pop     ar5
03B6 D004      1068            pop     ar4
03B8 D003      1069            pop     ar3
03BA D002      1070            pop     ar2
03BC           1071   ;        C:\Users\kiera\Downloads\adc_spi.c:275: if (y>30){
03BC E4        1072            clr     a
03BD C0E0      1073            push    acc
03BF C0E0      1074            push    acc
03C1 74F0      1075            mov     a,#0xF0
03C3 C0E0      1076            push    acc
03C5 7441      1077            mov     a,#0x41
03C7 C0E0      1078            push    acc
03C9 8A82      1079            mov     dpl,r2
03CB 8B83      1080            mov     dph,r3
03CD 8CF0      1081            mov     b,r4
03CF ED        1082            mov     a,r5
03D0 120100    1083            lcall   ___fsgt
03D3 AA82      1084            mov     r2,dpl
03D5 E581      1085            mov     a,sp
03D7 24FC      1086            add     a,#0xfc
03D9 F581      1087            mov     sp,a
03DB EA        1088            mov     a,r2
03DC 6001      1089            jz      L014002?
03DE           1090   ;        C:\Users\kiera\Downloads\adc_spi.c:276: LCDprint("House is Burning", 2, 1);
03DE 75E802    1091            mov     _LCDprint_PARM_2,#0x02
03E1 D298      1092            setb    _LCDprint_PARM_3
03E3 908640    1093            mov     dptr,#__str_4
03E6 75F080    1094            mov     b,#0x80
03E9 120100    1095            lcall   _LCDprint
03EC           1096   ;        C:\Users\kiera\Downloads\adc_spi.c:277: for(m=0; m<3; m++){
03EC 7A00      1097            mov     r2,#0x00
03EE 7B00      1098            mov     r3,#0x00
03F0           1099   L014007?:
03F0 C3        1100            clr     c
03F1 EA        1101            mov     a,r2
03F2 9403      1102            subb    a,#0x03
03F4 EB        1103            mov     a,r3
03F5 9400      1104            subb    a,#0x00
03F7 4001      1105            jc      L014018?
03F9 020100    1106            ljmp    L014005?
03FC           1107   L014018?:
03FC           1108   ;        C:\Users\kiera\Downloads\adc_spi.c:280: TR2=0; // Stop timer 2
03FC C2CA      1109            clr     _TR2
03FE           1110   ;        C:\Users\kiera\Downloads\adc_spi.c:281: RCAP2H=x/0x100; // Change reload value for new frequency high
03FE 75CB70    1111            mov     _RCAP2H,#0x70
0401           1112   ;        C:\Users\kiera\Downloads\adc_spi.c:282: RCAP2L=x%0x100; // Change reload value for new frequency low
0401 75CA00    1113            mov     _RCAP2L,#0x00
0404           1114   ;        C:\Users\kiera\Downloads\adc_spi.c:283: TR2=1; // Start timer 2
0404 D2CA      1115            setb    _TR2
0406           1116   ;        C:\Users\kiera\Downloads\adc_spi.c:287: waitms(100);
0406 900064    1117            mov     dptr,#0x0064
0409 C002      1118            push    ar2
040B C003      1119            push    ar3
040D 120100    1120            lcall   _waitms
0410 D003      1121            pop     ar3
0412 D002      1122            pop     ar2
0414           1123   ;        C:\Users\kiera\Downloads\adc_spi.c:291: TR2=0; // Stop timer 2
0414 C2CA      1124            clr     _TR2
0416           1125   ;        C:\Users\kiera\Downloads\adc_spi.c:292: RCAP2H=x/0x100; // Change reload value for new frequency high
0416 75CBFD    1126            mov     _RCAP2H,#0xFD
0419           1127   ;        C:\Users\kiera\Downloads\adc_spi.c:293: RCAP2L=x%0x100; // Change reload value for new frequency low
0419 75CAD8    1128            mov     _RCAP2L,#0xD8
041C           1129   ;        C:\Users\kiera\Downloads\adc_spi.c:294: TR2=1; // Start timer 2
041C D2CA      1130            setb    _TR2
041E           1131   ;        C:\Users\kiera\Downloads\adc_spi.c:277: for(m=0; m<3; m++){
041E 0A        1132            inc     r2
041F BA0080    1133            cjne    r2,#0x00,L014007?
0422 0B        1134            inc     r3
0423 8001      1135            sjmp    L014007?
0425           1136   L014002?:
0425           1137   ;        C:\Users\kiera\Downloads\adc_spi.c:302: TR2=0; // Stop timer 2
0425 C2CA      1138            clr     _TR2
0427           1139   ;        C:\Users\kiera\Downloads\adc_spi.c:303: RCAP2H=x/0x100; // Change reload value for new frequency high
0427 75CBFD    1140            mov     _RCAP2H,#0xFD
042A           1141   ;        C:\Users\kiera\Downloads\adc_spi.c:304: RCAP2L=x%0x100; // Change reload value for new frequency low
042A 75CAD8    1142            mov     _RCAP2L,#0xD8
042D           1143   ;        C:\Users\kiera\Downloads\adc_spi.c:305: TR2=1; // Start timer 2
042D D2CA      1144            setb    _TR2
042F           1145   ;        C:\Users\kiera\Downloads\adc_spi.c:307: f=CLK/(2L*(0x10000L-x));
042F 020100    1146            ljmp    L014005?
0432           1147            rseg R_CSEG
0432           1148   
0000           1149            rseg R_XINIT
0000           1150   
0000           1151            rseg R_CONST
0000           1152   __str_0:
0000 54656D70  1153            db 'Temp Detection'
     20446574
     65637469
     6F6E
000E 00        1154            db 0x00
000F           1155   __str_1:
000F 53746174  1156            db 'Status: Active'
     75733A20
     41637469
     7665
001D 00        1157            db 0x00
001E           1158   __str_2:
001E 25352E33  1159            db '%5.3f '
     6620
0024 00        1160            db 0x00
0025           1161   __str_3:
0025 0A        1162            db 0x0A
0026 00        1163            db 0x00
0027           1164   __str_4:
0027 486F7573  1165            db 'House is Burning'
     65206973
     20427572
     6E696E67
0037 00        1166            db 0x00
0038           1167   
002E           1168            CSEG
002E           1169   
002E           1170   end
